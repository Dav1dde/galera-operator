// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"galera-backup/pkg/models"
)

// AddS3BackupOKCode is the HTTP code returned for type AddS3BackupOK
const AddS3BackupOKCode int = 200

/*AddS3BackupOK backup scheduled

swagger:response addS3BackupOK
*/
type AddS3BackupOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewAddS3BackupOK creates AddS3BackupOK with default headers values
func NewAddS3BackupOK() *AddS3BackupOK {

	return &AddS3BackupOK{}
}

// WithPayload adds the payload to the add s3 backup o k response
func (o *AddS3BackupOK) WithPayload(payload *models.Response) *AddS3BackupOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add s3 backup o k response
func (o *AddS3BackupOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddS3BackupOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddS3BackupDefault default ko response

swagger:response addS3BackupDefault
*/
type AddS3BackupDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewAddS3BackupDefault creates AddS3BackupDefault with default headers values
func NewAddS3BackupDefault(code int) *AddS3BackupDefault {
	if code <= 0 {
		code = 500
	}

	return &AddS3BackupDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add s3 backup default response
func (o *AddS3BackupDefault) WithStatusCode(code int) *AddS3BackupDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add s3 backup default response
func (o *AddS3BackupDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add s3 backup default response
func (o *AddS3BackupDefault) WithPayload(payload *models.Response) *AddS3BackupDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add s3 backup default response
func (o *AddS3BackupDefault) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddS3BackupDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
